{"version":3,"sources":["components/info_screen.js","components/transportcontrols.js","components/sequencer-controls.js","components/trackselection.js","App.js","serviceWorker.js","index.js"],"names":["InfoScreenContainer","styled","div","_templateObject","InfoScreen","props","react_default","a","createElement","className","bpm","currentSample","masterTrackLength","TransportControls","type","defaultValue","onChange","changeTempo","min","max","onClick","stopSequencer","startSequencer","data-active","playstate","SequencerWrapper","sequencer_controls_templateObject","SequencerButtonWrapper","_templateObject2","SequencerControls","currentnotes","map","box","index","key","event","updateNote","TrackSelectionWrapper","trackselection_templateObject","TrackWrapper","trackselection_templateObject2","input","_templateObject3","TrackSelection","Object","keys","sequence","muteTrack","data-muted","muted","switchTrack","data-selected","currenttrack","ClearTrack","clearTrack","size","obj","hasOwnProperty","track1","notes","volume","sample","trkLength","track2","track3","track4","track5","track6","track7","track8","sounds","Tone","Players","fadeOut","toMaster","createTrackArray","lengthArray","i","push","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loop1","Sequence","time","step","get","start","Draw","schedule","document","querySelectorAll","classList","toggle","remove","loop2","loop3","loop4","loop5","loop6","loop7","loop8","setState","target","value","Transport","stop","position","length","updated","state","updatedMeasure","oldTrack","prevState","muteArray","changeVolume","Array","fill","clearSong","track","tracks","pads","litNote","transportTime","AudioContext","info_screen","split","transportcontrols","clearSequencer","trackselection","sequencer_controls","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af35a89e.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\n\nconst InfoScreenContainer = styled.div`\n    background-color: #101010;\n    border-radius: 4px;\n    width: 50%;\n    display: inline-block;\n    text-align:left;\n    padding:5px;\n    p{\n        line-height: 15px;\n    }\n    label{\n        text-transform: uppercase;\n        font-weight: 700;\n        display: inline-block;\n        margin: 0 10px 0 0;\n    }\n    span{\n        font-family: 'Minisystem';\n        display: inline-block;\n        font-size: 24px;\n    }\n    .tempo{\n        font-size: 30px;\n    }\n`\n\n\nfunction InfoScreen(props){\n    return(\n        <InfoScreenContainer>\n            <p><label>Tempo (BPM)</label>\n                <span className=\"tempo\">{props.bpm}</span></p>\n                <p><label>Sample</label>\n                <span>{props.currentSample}</span></p>\n                <p><label>Track Length</label>\n                <span>{props.masterTrackLength}</span></p>\n        </InfoScreenContainer>\n    )\n}\n\nexport default InfoScreen;","import React from 'react';\n\nfunction TransportControls(props){\n    return(\n        <div className=\"transport-controls-wrapper\">\n            <p>TEMPO: <input type=\"range\" defaultValue={props.bpm} onChange={props.changeTempo} min=\"20\" max=\"300\"/></p>\n            <button className=\"stop\" onClick={props.stopSequencer}>stop</button> \n            <button className=\"play\" onClick={props.startSequencer} data-active={props.playstate === 1 ? true : false}>play</button>\n            {/* <p>{props.transportTime}</p> */}\n        </div>\n    ) \n}\n\nexport default TransportControls;","import React from 'react';\nimport styled from 'styled-components';\n\nconst SequencerWrapper = styled.div`\n    margin: 0 0 0;\n    border-radius: 8px;\n    display:inline-block;\n    padding: 0 0px;\n`\nconst SequencerButtonWrapper = styled.div`\n    display:inline-block;\n    margin: 0 0 10px;\n    width: 50px;\n    label{\n        position: relative;\n        display: block;\n        text-align: center;\n        margin: 5px 5px 0;\n        font-size: 11px;\n        color: #aaa4a4;\n        font-weight:800;\n        font-family: Helvetica, sans-serif;\n    }\n    :nth-of-type(4n+1) .sequencer--button::after{\n        content:'';\n        width: 20px;\n        height: 5px;\n        border-radius: 1.5px;\n        display:block;\n        position: absolute;\n        bottom: 10px;\n        left: 10px;\n        background-color: #000;\n      }\n`\n\nfunction SequencerControls(props){\n        return(\n            <SequencerWrapper>\n                {props.currentnotes.map((box, index) => \n                    <SequencerButtonWrapper key={index}>\n                        <div className={box === 1 ? \"sequencer--button active\" : \"sequencer--button\"} onClick={(event)=> props.updateNote(index)}></div>\n                        <label>{index+1}</label>\n                    </SequencerButtonWrapper>)}\n            </SequencerWrapper>\n        ) \n}\n\nexport default SequencerControls;","import React from 'react';\nimport styled from 'styled-components';\n\nconst TrackSelectionWrapper = styled.div`\n    width: 700px;\n    display:inline-block;\n    margin: 30px 0;\n`\nconst TrackWrapper = styled.div`\n    width:80px;\n    display:inline-block;\n    padding:5px;\n    input[type=range]{\n        height: 100px;\n        width: 70px;\n        writing-mode: bt-lr; /* IE */\n        -webkit-appearance: slider-vertical; /* WebKit */\n        margin: 0 auto 10px;\n        text-align: center;\n    }\n    button{\n        width: 70px;\n        height: 30px;\n        line-height: 25px;\n        font-size: 10px;\n        font-weight: 700;\n        appearance: none;\n        padding:none;\n        text-transform: uppercase;\n        border: 2px solid #e0d7d7;\n        color: #e0d7d7;\n        background-color:#606c88;\n        -webkit-appearance: none;\n        border-radius:2.5px;\n        cursor: pointer;\n        margin: 0 0 5px;\n        &[data-selected=true]{\n            background-color: #e0d7d7;\n            color: #606c88;\n            transition: background-color .1s, color .1s;\n        }\n        &[data-muted=true]{\n            background-color: #101010;\n            color: #8f8b8b;\n            border-color: #8f8b8b;\n        }\n      }\n`\n\nconst TrackLengthInput = styled.input`\n    border: none;\n    appearance: none;\n    background-color: #3f4c6b;\n    color: #fff;\n    &::after{\n        content: 'TRK LNGTH';\n        color: #fff;\n        position: relative;\n    }\n`\n\nfunction TrackSelection(props){\n        return(\n            <TrackSelectionWrapper>\n                {Object.keys(props.sequence).map((key, index)=>\n                        <TrackWrapper key={key}>\n                            {/* <input type=\"range\" orient=\"vertical\" min=\"-80\" max=\"6\" defaultValue={this.props.sequence[key].volume} onChange={(event)=> this.props.changeVolume(event, key)}></input> */}\n                            <button className=\"mute\" onClick={(event)=>props.muteTrack(event, index, key)} data-muted={props.muted[index]}>MUTE</button>\n                            <button onClick={(event)=>props.switchTrack(event, key)} data-selected={props.currenttrack === key && \"true\"}>{key}</button>\n                            {/* <TrackLengthInput type=\"number\" min=\"1\" max=\"64\" placeholder={this.props.sequence[key].trackLength}></TrackLengthInput> */}\n                        </TrackWrapper>\n                )}\n            </TrackSelectionWrapper>\n        )\n}\n\nexport default TrackSelection;","import React, { Component } from 'react';\nimport Tone from 'tone';\nimport InfoScreen from './components/info_screen';\nimport TransportControls from './components/transportcontrols';\nimport SequencerControls from './components/sequencer-controls';\n//import MixerControls from './components/mixercontrols'; This is out for now until I get a better realtime check on the controlls with Tone.js\nimport TrackSelection from './components/trackselection';\nimport './App.css';\n\nObject.size = function(obj) {\n  var size = 0, key;\n  for (key in obj) {\n      if (obj.hasOwnProperty(key)) size++;\n  }\n  return size;\n};\nfunction ClearTrack(props){\n  return (\n    <div className=\"clearcontrols\">\n      <button onClick={props.clearTrack}>Clear Track</button>\n      {/* <button onClick={props.clearSong}>Clear Sequence</button> */}\n    </div>\n  )\n}\n  const defaultTrackSize = 16;\n  const defaultVolume = 0;\n\n //Main Storage area for our notes in 16 beat time.\n let sequence = {\n  \"track1\":{\n    \"notes\": [1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0],\n    \"volume\": defaultVolume,\n    \"sample\": \"./samples/909/BD.wav\",\n    \"trkLength\": defaultTrackSize,\n    \"muted\": 0\n  },\n  \"track2\":{\n    \"notes\": [0,0,0,0,1,1,1,1,0,0,0,0,1,0,0,0],\n    \"volume\": defaultVolume,\n    \"sample\": \"./samples/909/Snaredrum.wav\",\n    \"trkLength\": defaultTrackSize,\n    \"muted\": 0\n  },\n  \"track3\":{\n    \"notes\": [0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0],\n    \"volume\": defaultVolume,\n    \"sample\": \"./samples/909/Rimshot.wav\",\n    \"trkLength\": defaultTrackSize,\n    \"muted\": 0\n  },\n  \"track4\":{\n    \"notes\": [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n    \"volume\": defaultVolume,\n    \"sample\": \"./samples/909/Clap.wav\",\n    \"trkLength\": defaultTrackSize,\n    \"muted\": 0\n  },\n  \"track5\":{\n    \"notes\": [0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0],\n    \"volume\": defaultVolume,\n    \"sample\": \"./samples/909/CH.wav\",\n    \"trkLength\": defaultTrackSize,\n    \"muted\": 0\n  },\n  \"track6\":{\n    \"notes\": [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],\n    \"volume\": 0,\n    \"sample\": \"./samples/909/OH.wav\",\n    \"trkLength\": defaultTrackSize,\n    \"muted\": 0\n  },\n  \"track7\":{\n    \"notes\": [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n    \"volume\": defaultVolume,\n    \"sample\": \"./samples/909/Crash.wav\",\n    \"trkLength\": defaultTrackSize,\n    \"muted\": 0\n  },\n  \"track8\":{\n    \"notes\": [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n    \"volume\": defaultVolume,\n    \"sample\": \"./samples/909/Ride.wav\",\n    \"trkLength\": defaultTrackSize,\n    \"muted\": 0\n  }\n}\nlet sounds = new Tone.Players({\n  \"track1\" : sequence.track1.sample,\n  \"track2\" : sequence.track2.sample,\n  \"track3\" : sequence.track3.sample,\n  \"track4\" : sequence.track4.sample,\n  \"track5\" : sequence.track5.sample,\n  \"track6\" : sequence.track6.sample,\n  \"track7\" : sequence.track7.sample,\n  \"track8\" : sequence.track8.sample\n  },{\n    \"volume\" : -10,\n    \"fadeOut\" : \"64n\"\n  }).toMaster();\n\nlet createTrackArray = function(trkLength){\n  let lengthArray=[]\n  for(let i=0; i<trkLength; i++){\n    lengthArray.push(i);\n  }\n  return lengthArray;\n}\n\nlet drumMemory = {\n\n}\n\n//CHANNEL SECTION\n// To Be Implemented better!\n\n//  const makeChannel = function(name, url){\n//   let channel = new Tone.Channel().toMaster();\n//   let player = new Tone.Player({\n//     url: url,\n//     loop: false\n//   }).sync();\n//   player.chain(channel)\n// }\n\n// for(let track in sequence){\n//   makeChannel(track);\n// }\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      playstate: 0,\n      bpm: 105,\n      tracks: '',\n      pads: 16,\n      litNote: -1,\n      currenttrack: \"track1\",\n      currentnotes: [],\n      volume: Array(8).fill(0),\n      muted: Array(8).fill(false),\n      transportTime: \"\",\n      masterTrackLength: 16\n    }\n  }\n\n\n  //LOOP SECTION \n\n  loop1 = new Tone.Sequence(function(time, step){\n      if(sequence.track1.notes[step] > 0 && !sequence.track1.muted){\n        sounds.get(\"track1\").start(time)\n      }\n    Tone.Draw.schedule(function(){\n      document.querySelectorAll(\".sequencer--button\")[step].classList.toggle('chase');\n      if(step!==0){\n        document.querySelectorAll(\".sequencer--button\")[step-1].classList.toggle('chase');\n      }\n      else{\n        document.querySelectorAll(\".sequencer--button\")[15].classList.remove('chase');\n      }\n    }, time);\n  }, createTrackArray(sequence.track1.trkLength), \"16n\").start(0);  //array controls pattern length\n\n  loop2 = new Tone.Sequence(function(time, step){\n      if(sequence.track2.notes[step] > 0 && !sequence.track2.muted){\n        sounds.get(\"track2\").start(time)\n      }\n  }, createTrackArray(sequence.track2.trkLength), \"16n\").start(0);\n\n  loop3 = new Tone.Sequence(function(time, step){\n    if(sequence.track3.notes[step] > 0 && !sequence.track3.muted){\n      sounds.get(\"track3\").start(time)\n    }\n  }, createTrackArray(sequence.track3.trkLength), \"16n\").start(0);\n \n  loop4 = new Tone.Sequence(function(time, step){\n    if(sequence.track4.notes[step] > 0 && !sequence.track4.muted){\n      sounds.get(\"track4\").start(time)\n    }\n  }, createTrackArray(sequence.track4.trkLength), \"16n\").start(0);\n \n  loop5 = new Tone.Sequence(function(time, step){\n    if(sequence.track5.notes[step] > 0 && !sequence.track5.muted){\n      sounds.get(\"track5\").start(time)\n    }\n  }, createTrackArray(sequence.track5.trkLength), \"16n\").start(0);\n\n  loop6 = new Tone.Sequence(function(time, step){\n    if(sequence.track6.notes[step] > 0 && !sequence.track6.muted){\n      sounds.get(\"track6\").start(time)\n    }\n  }, createTrackArray(sequence.track6.trkLength), \"16n\").start(0);\n\n  loop7 = new Tone.Sequence(function(time, step){\n    if(sequence.track7.notes[step] > 0 && !sequence.track7.muted){\n      sounds.get(\"track7\").start(time)\n    }\n  }, createTrackArray(sequence.track7.trkLength), \"16n\").start(0);\n\n  loop8 = new Tone.Sequence(function(time, step){\n    if(sequence.track8.notes[step] > 0 && !sequence.track8.muted){\n      sounds.get(\"track8\").start(time)\n    }\n  }, createTrackArray(sequence.track8.trkLength), \"16n\").start(0);\n\n  //END LOOP SECTION\n\n  changeTempo=(event)=>{\n    this.setState({bpm: event.target.value});\n    Tone.Transport.bpm.value = event.target.value;\n  }\n  stopSequencer=()=>{\n    this.setState({playstate: 0});\n    Tone.Transport.stop(0);\n    Tone.Transport.position = \"0:0:0\";\n    for(let i=0;i<document.querySelectorAll('.sequencer--button').length; i += 1){\n      document.querySelectorAll('.sequencer--button')[i].classList.remove('chase');\n    }\n  }\n  \n  startSequencer=()=>{\n    this.setState({playstate: 1});\n    Tone.Transport.start();\n  }\n\n  updateNote=(index)=>{\n    let updated = + !this.state.currentnotes[index];\n    let updatedMeasure = this.state.currentnotes;\n    updatedMeasure[index]=updated;\n    this.setState({\n        currentnotes: updatedMeasure\n    });\n  }\n  \n  //Update our master sequencer track to selected, and save the old one\n  switchTrack=(event, key)=>{\n    let oldTrack = this.state.currenttrack;\n    sequence[oldTrack].notes = this.state.currentnotes; \n    this.setState((prevState)=>({ \n      currentnotes: sequence[key].notes,\n      currenttrack: key,\n      masterTrackLength: sequence[key].trkLength\n    }));\n    if(this.state.playstate !== 1){\n      sounds.get(key).start();\n    }\n  }\n  muteTrack=(event, index, key)=>{\n    let muteArray = this.state.muted;\n    muteArray[index] = !this.state.muted[index];\n    this.setState((prevState)=>({\n      muted: muteArray\n    }));\n    sequence[key].muted = !sequence[key].muted;\n  }\n  changeVolume=(event, key)=>{\n    sequence[key].volume = event.target.value;\n  }\n  clearTrack=()=>{\n    \n    this.setState({\n      currentnotes: Array(16).fill(0)\n    });\n    sequence[this.state.currenttrack].notes = Array(16).fill(0);\n  }\n  clearSong=()=>{\n    this.setState((prevState)=>({\n      currentnotes: Array(16).fill(0)\n    }));\n    for(let track in sequence){\n      sequence[track].notes = Array(16).fill(0);\n    }\n  }\n  componentDidMount(){\n    // StartAudioContext(Tone.context);\n    // this.initializeSounds(sequence);\n    var context = new AudioContext();  //Required for Chrome etc.\n\n    this.setState({\n        tracks: Object.size(sequence),\n        currentnotes: sequence.track1.notes\n      });\n    Tone.Transport.bpm.value = this.state.bpm;\n\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <InfoScreen\n          bpm = {this.state.bpm}\n          currentSample = {sequence[this.state.currenttrack].sample.split('./samples')[1]}\n          masterTrackLength = {this.state.masterTrackLength}\n        ></InfoScreen>\n        <TransportControls\n          changeTempo = {this.changeTempo}\n          playstate = {this.state.playstate}\n          bpm = {this.state.bpm}\n          transportTime = {this.state.transportTime}\n          stopSequencer = {this.stopSequencer}\n          startSequencer = {this.startSequencer}\n          clearSequencer = {this.clearSequencer}\n        />\n        <TrackSelection\n          currenttrack = {this.state.currenttrack}\n          sequence = {sequence}\n          switchTrack = {this.switchTrack}\n          muteTrack = {this.muteTrack}\n          muted = {this.state.muted}\n          changeVolume = {this.changeVolume}\n        />\n        <ClearTrack\n          clearTrack = {this.clearTrack}\n          clearSong = {this.clearSong}\n        ></ClearTrack>\n        <SequencerControls \n          pads = {this.state.pads}\n          currenttrack = {this.state.currenttrack}\n          currentnotes = {this.state.currentnotes}\n          litNote = {this.litNote}\n          sequence = {sequence}\n          updateNote = {this.updateNote}\n          />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}