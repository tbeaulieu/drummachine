{"version":3,"sources":["components/transportcontrols.js","components/sequencer-controls.js","components/trackselection.js","App.js","serviceWorker.js","index.js"],"names":["TransportControls","react_default","a","createElement","className","type","defaultValue","this","props","bpm","onChange","changeTempo","min","max","onClick","stopSequencer","startSequencer","data-active","playstate","Component","SequencerControls","_this","currentnotes","map","box","index","key","event","updateNote","TrackSelection","Object","keys","sequence","switchTrack","data-selected","currenttrack","ClearTrack","clearTrack","size","obj","hasOwnProperty","track1","notes","volume","sample","track2","track3","track4","track5","track6","track7","track8","sounds","Tone","Players","fadeOut","toMaster","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loop","Sequence","time","step","track","get","start","Draw","schedule","document","querySelectorAll","classList","toggle","remove","setState","target","value","Transport","stop","position","on","i","length","updated","state","updatedMeasure","oldTrack","prevState","cleared","clearSong","console","log","tracks","pads","litNote","transportTime","_this2","scheduleRepeat","Time","toBarsBeatsSixteenths","transportcontrols","clearSequencer","trackselection","sequencer_controls","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.12d4858d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TransportControls extends Component{\n    \n    render(){\n        return(\n            <div className=\"transport-controls-wrapper\">\n                <p>Tempo: <input type=\"range\" defaultValue={this.props.bpm} onChange={this.props.changeTempo} min=\"20\" max=\"300\"/> <span>{this.props.bpm} bpm</span></p>\n                <button className=\"stop\" onClick={this.props.stopSequencer}>stop</button> \n                <button className=\"play\" onClick={this.props.startSequencer} data-active={this.props.playstate === 1 ? true : false}>play</button>\n                {/* <p>{this.props.transportTime}</p> */}\n                {/* <button className=\"clear\" onClick={this.props.clearSequencer}>clear</button> */}\n                {/* {this.props.bpm>180 && <h1 className=\"spinner\">REAL HARDCORE MANNNNNN!!!</h1>} */}\n            </div>\n        ) \n    }\n}\n\nexport default TransportControls;","import React, { Component } from 'react';\n\nclass SequencerControls extends Component{\n    render(){\n        return(\n            <div className=\"sequencer-wrapper\">\n                {this.props.currentnotes.map((box, index) => \n                    <div key={index} className=\"sequencer-button-wrapper\">\n                        <div className={box === 1 ? \"sequencer--button active\" : \"sequencer--button\"} onClick={(event)=>this.props.updateNote(index)}></div>\n                        <label>{index+1}</label>\n                    </div>)}\n            </div>\n        ) \n    }\n}\n\nexport default SequencerControls;","import React, { Component } from 'react';\n\nclass TrackSelection extends Component{\n\n    render(){\n        return(\n            <div className=\"trackselection-wrapper\">\n                {Object.keys(this.props.sequence).map((key)=>\n                        <div key={key} className=\"trackselector-wrapper\"><button onClick={(event)=>this.props.switchTrack(event, key)} data-selected={this.props.currenttrack === key && \"true\"}>{key}</button></div>\n                )}\n            </div>\n        ) \n    }\n}\n\nexport default TrackSelection;","import React, { Component } from 'react';\nimport Tone from 'tone';\nimport TransportControls from './components/transportcontrols';\nimport SequencerControls from './components/sequencer-controls';\n//import MixerControls from './components/mixercontrols'; This is out for now until I get a better realtime check on the controlls with Tone.js\nimport TrackSelection from './components/trackselection';\nimport './App.css';\n\nObject.size = function(obj) {\n  var size = 0, key;\n  for (key in obj) {\n      if (obj.hasOwnProperty(key)) size++;\n  }\n  return size;\n};\nfunction ClearTrack(props){\n  return (\n    <div className=\"clearcontrols\">\n      <button onClick={props.clearTrack}>Clear Track</button>\n      {/* <button onClick={props.clearSong}>Clear All</button> */}\n    </div>\n  )\n}\n\n //Main Storage area for our notes in 16 beat time.\n let sequence = {\n  \"track1\":{\n    \"notes\": [1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],\n    \"volume\": 127,\n    \"sample\": \"./samples/909/BD.wav\"\n        },\n  \"track2\":{\n    \"notes\": [0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],\n    \"volume\": 127,\n    \"sample\": \"./samples/909/Snaredrum.wav\"\n  },\n  \"track3\":{\n    \"notes\": [0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0],\n    \"volume\": 127,\n    \"sample\": \"./samples/909/Rimshot.wav\"\n  },\n  \"track4\":{\n    \"notes\": [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1],\n    \"volume\": 127,\n    \"sample\": \"./samples/909/Clap.wav\"\n  },\n  \"track5\":{\n    \"notes\": [1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1],\n    \"volume\": 127,\n    \"sample\": \"./samples/909/CH.wav\"\n  },\n  \"track6\":{\n    \"notes\": [0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0],\n    \"volume\": 127,\n    \"sample\": \"./samples/909/OH.wav\"\n  },\n  \"track7\":{\n    \"notes\": [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n    \"volume\": 127,\n    \"sample\": \"./samples/909/Crash.wav\"\n  },\n  \"track8\":{\n    \"notes\": [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n    \"volume\": 127,\n    \"sample\": \"./samples/909/Ride.wav\"\n  }\n}\n\nlet sounds = new Tone.Players({\n  \"track1\" : sequence.track1.sample,\n  \"track2\" : sequence.track2.sample,\n  \"track3\" : sequence.track3.sample,\n  \"track4\" : sequence.track4.sample,\n  \"track5\" : sequence.track5.sample,\n  \"track6\" : sequence.track6.sample,\n  \"track7\" : sequence.track7.sample,\n  \"track8\" : sequence.track8.sample\n  },{\n    \"volume\" : -10,\n    \"fadeOut\" : \"64n\"\n  }).toMaster();\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      playstate: 0,\n      bpm: 128,\n      tracks: '',\n      pads: 16,\n      litNote: -1,\n      currenttrack: \"track1\",\n      currentnotes: [],\n      volume: [],\n      transportTime: \"\"\n    }\n  }\n  loop = new Tone.Sequence(function(time, step){\n    for(let track in sequence){\n      if(sequence[track].notes[step] === 1){\n        sounds.get(track).start(time)\n      }\n    }\n    Tone.Draw.schedule(function(){\n      document.querySelectorAll(\".sequencer--button\")[step].classList.toggle('chase');\n      if(step!==0){\n        document.querySelectorAll(\".sequencer--button\")[step-1].classList.toggle('chase');\n      }\n      else{\n        document.querySelectorAll(\".sequencer--button\")[15].classList.remove('chase');\n      }\n    }, time);\n  }, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], \"16n\").start(0);\n\n  changeTempo=(event)=>{\n    this.setState({bpm: event.target.value});\n    Tone.Transport.bpm.value = event.target.value;\n  }\n  stopSequencer=()=>{\n    this.setState({playstate: 0});\n    Tone.Transport.stop(0);\n    Tone.Transport.position = \"0:0:0\";\n    Tone.Transport.on(\"stop\", () => {\n      // setTimeout(() => {\n      //     this.setState({\n      //       litNote: -1;\n      //     })\n      // }, 100);\n    })\n    for(let i=0;i<document.querySelectorAll('.sequencer--button').length; i += 1){\n      document.querySelectorAll('.sequencer--button')[i].classList.remove('chase');\n    }\n  }\n  startSequencer=()=>{\n    this.setState({playstate: 1});\n    Tone.Transport.start();\n  }\n\n  updateNote=(index)=>{\n    let updated = + !this.state.currentnotes[index];\n    let updatedMeasure = this.state.currentnotes;\n    updatedMeasure[index]=updated;\n    this.setState({\n        currentnotes: updatedMeasure\n    });\n    // Need to be able to clear a note before doing this stuff\n    // console.log(sequence[this.state.currenttrack].notes);\n    // Tone.Transport.scheduleOnce((time)=>{\n    //   sequence[this.state.currenttrack].fireIt.start()\n    // },\"0:0:\"+index+1);\n  }\n  //Update our master sequencer track to selected, and save the old one\n  switchTrack=(event, key)=>{\n    let oldTrack = this.state.currenttrack;\n    sequence[oldTrack].notes=this.state.currentnotes; \n    this.setState((prevState)=>({ \n      currentnotes: sequence[key].notes,\n      currenttrack: key\n    }));\n    if(this.state.playstate !== 1){\n      sounds.get(key).start();\n    }\n  }\n  clearTrack=()=>{\n    const cleared = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\n    this.setState({\n      currentnotes: cleared\n    });\n    sequence[this.state.currenttrack].notes = cleared;\n  }\n  clearSong=()=>{\n    const cleared = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\n    this.setState({\n      currentnotes: cleared\n    });\n    for(let track in sequence){\n      sequence[track].notes = cleared;\n      console.log(this.state.currenttrack)\n    }\n  }\n  componentDidMount(){\n    // StartAudioContext(Tone.context);\n    // this.initializeSounds(sequence);\n    this.setState({\n        tracks: Object.size(sequence),\n        currentnotes: sequence.track1.notes\n      });\n    Tone.Transport.bpm.value = this.state.bpm;\n    Tone.Transport.scheduleRepeat((time)=>{\n      this.setState({\n        transportTime:Tone.Time(time).toBarsBeatsSixteenths()\n      });\n    },\"16n\");\n    //Schedule the default pattern\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <TransportControls\n          changeTempo = {this.changeTempo}\n          playstate = {this.state.playstate}\n          bpm = {this.state.bpm}\n          transportTime = {this.state.transportTime}\n          stopSequencer = {this.stopSequencer}\n          startSequencer = {this.startSequencer}\n          clearSequencer = {this.clearSequencer}\n        />\n        <TrackSelection\n          currenttrack = {this.state.currenttrack}\n          sequence = {sequence}\n          switchTrack = {this.switchTrack}\n        />\n        {/* <MixerControls\n          tracks={this.state.tracks}\n          sequence={sequence}\n          /> */}\n        <ClearTrack\n          clearTrack = {this.clearTrack}\n          clearSong = {this.clearSong}\n        ></ClearTrack>\n        <SequencerControls \n          pads = {this.state.pads}\n          currenttrack = {this.state.currenttrack}\n          currentnotes = {this.state.currentnotes}\n          litNote = {this.litNote}\n          sequence = {sequence}\n          updateNote = {this.updateNote}\n          />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}