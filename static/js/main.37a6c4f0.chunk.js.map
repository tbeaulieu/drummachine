{"version":3,"sources":["components/transportcontrols.js","components/sequencer-controls.js","components/trackselection.js","App.js","serviceWorker.js","index.js"],"names":["TransportControls","react_default","a","createElement","className","type","defaultValue","this","props","bpm","onChange","changeTempo","min","max","onClick","stopSequencer","startSequencer","data-active","playstate","transportTime","Component","SequencerControls","_this","currentnotes","map","box","index","key","event","updateNote","TrackSelection","Object","keys","sequence","switchTrack","data-selected","currenttrack","size","obj","hasOwnProperty","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","track1","notes","volume","sample","track2","track3","track4","track5","track6","track7","track8","setState","target","value","Tone","Transport","stop","position","start","console","log","Ticks","clearSequencer","cleared","track","state","updated","updatedMeasure","scheduleOnce","time","fireIt","oldTrack","startLoop","reduce","srch","i","push","steps","Draw","schedule","Time","toBarsBeatsSixteenths","tracks","pads","ourObj","Player","url","vol","toMaster","_this2","initializeSounds","loop","loopEnd","setLoopPoints","scheduleRepeat","transportcontrols","trackselection","sequencer_controls","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37a6c4f0.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TransportControls extends Component{\n    \n    render(){\n        return(\n            <div className=\"transport-controls-wrapper\">\n                <p>Tempo: <input type=\"range\" defaultValue={this.props.bpm} onChange={this.props.changeTempo} min=\"20\" max=\"300\"/> {this.props.bpm} bpm</p>\n                <button className=\"stop\" onClick={this.props.stopSequencer}>stop</button> \n                <button className=\"play\" onClick={this.props.startSequencer} data-active={this.props.playstate===1 ? true : false}>play</button>\n                <p>{this.props.transportTime}</p>\n                {/* <button className=\"clear\" onClick={this.props.clearSequencer}>clear</button> */}\n                {/* {this.props.bpm>180 && <h1 className=\"spinner\">REAL HARDCORE MANNNNNN!!!</h1>} */}\n            </div>\n        ) \n    }\n}\n\nexport default TransportControls;","import React, { Component } from 'react';\n\nclass SequencerControls extends Component{\n    render(){\n        return(\n            <div className=\"sequencer-wrapper\">\n                {this.props.currentnotes.map((box, index) => \n                    <div key={index} className=\"sequencer-button-wrapper\">\n                        <div className={box===1 ? \"sequencer--button active\" : \"sequencer--button\"} onClick={(event)=>this.props.updateNote(index)}></div>\n                        <label>{index+1}</label>\n                    </div>)}\n            </div>\n        ) \n    }\n}\n\nexport default SequencerControls;","import React, { Component } from 'react';\n\nclass TrackSelection extends Component{\n\n    render(){\n        return(\n            <div className=\"trackselection-wrapper\">\n                {Object.keys(this.props.sequence).map((key)=>\n                        <div key={key} className=\"trackselector-wrapper\"><button onClick={(event)=>this.props.switchTrack(event, key)} data-selected={this.props.currenttrack === key && \"true\"}>{key}</button></div>\n                )}\n            </div>\n        ) \n    }\n}\n\nexport default TrackSelection;","import React, { Component } from 'react';\nimport Tone from 'tone';\nimport TransportControls from './components/transportcontrols';\nimport SequencerControls from './components/sequencer-controls';\n//import MixerControls from './components/mixercontrols'; This is out for now until I get a better realtime check on the controlls with Tone.js\nimport TrackSelection from './components/trackselection';\nimport './App.css';\n\nObject.size = function(obj) {\n  var size = 0, key;\n  for (key in obj) {\n      if (obj.hasOwnProperty(key)) size++;\n  }\n  return size;\n};\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      playstate: 0,\n      bpm: 128,\n      tracks: '',\n      pads: 16,\n      currenttrack: \"track1\",\n      currentnotes: [],\n      volume: [],\n      transportTime: \"\"\n    }\n  }\n\n  //Main Storage area for our notes in 16 beat time.\n  sequence = {\n    \"track1\":{\n      \"notes\": [1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],\n      \"volume\": 127,\n      \"sample\": \"./samples/909/BD.wav\"\n          },\n    \"track2\":{\n      \"notes\": [0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],\n      \"volume\": 127,\n      \"sample\": \"./samples/909/Snaredrum.wav\"\n    },\n    \"track3\":{\n      \"notes\": [0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0],\n      \"volume\": 127,\n      \"sample\": \"./samples/909/Rimshot.wav\"\n    },\n    \"track4\":{\n      \"notes\": [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1],\n      \"volume\": 127,\n      \"sample\": \"./samples/909/Clap.wav\"\n    },\n    \"track5\":{\n      \"notes\": [1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1],\n      \"volume\": 127,\n      \"sample\": \"./samples/909/CH.wav\"\n    },\n    \"track6\":{\n      \"notes\": [0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0],\n      \"volume\": 127,\n      \"sample\": \"./samples/909/OH.wav\"\n    },\n    \"track7\":{\n      \"notes\": [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n      \"volume\": 127,\n      \"sample\": \"./samples/909/Crash.wav\"\n    },\n    \"track8\":{\n      \"notes\": [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n      \"volume\": 127,\n      \"sample\": \"./samples/909/Ride.wav\"\n    }\n  }\n\n  // sampleplayer = Object(this.sequence).map((key)=> \n  //    let player[key] = new Tone.Player(this.sequence[key].sample).toMaster()\n  // );\n  //initialize our sequence object with a function call for a player \n  initializeSounds(ourObj){\n    Object.keys(ourObj).map((track, index)=>{\n      ourObj[track].fireIt= new Tone.Player({\"url\":ourObj[track].sample, \"vol\":ourObj[track].volume}).toMaster(); //Change this to sample at some point?\n      return true;\n    });\n    \n  }\n  changeTempo=(event)=>{\n    this.setState({bpm: event.target.value});\n    Tone.Transport.bpm.value = event.target.value;\n  }\n  stopSequencer=()=>{\n    this.setState({playstate: 0});\n    Tone.Transport.stop(\"0\");\n    Tone.Transport.position=\"0:0:0\";\n  }\n  startSequencer=()=>{\n    this.setState({playstate: 1});\n    Tone.Transport.start();\n    console.log(Tone.Ticks(\"16n\"));\n  }\n  clearSequencer=()=>{\n    const cleared=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\n    this.setState({\n      currentnotes: cleared \n    });\n    Object.keys(this.sequence).map((track)=>{\n      this.sequence[track].notes = cleared;\n      console.log(this.sequence[track].notes);\n    });    \n  }\n  updateNote=(index)=>{\n    console.log(index);\n    console.log(this.state.currenttrack)\n    let updated= + !this.state.currentnotes[index];\n    let updatedMeasure = this.state.currentnotes;\n    updatedMeasure[index]=updated;\n    this.setState({\n        currentnotes: updatedMeasure\n    });\n    \n    // Need to be able to clear a note before doing this stuff\n    Tone.Transport.scheduleOnce((time)=>{\n      this.sequence[this.state.currenttrack].fireIt.start()\n    },\"0:0:\"+index+1);\n  }\n\n  //Update our master sequencer track to selected, and save the old one\n  switchTrack=(event, key)=>{\n    let oldTrack = this.state.currenttrack;\n    this.sequence[oldTrack].notes=this.state.currentnotes; \n    this.setState({ \n      currentnotes: this.sequence[key].notes,\n      currenttrack: key\n    });\n    if(this.state.playstate!==1){\n      this.sequence[key].fireIt.start();\n    }\n  }\n\n  componentDidMount(){\n    // StartAudioContext(Tone.context);\n    this.initializeSounds(this.sequence);\n    this.setState({\n        tracks: Object.size(this.sequence),\n        currentnotes: this.sequence.track1.notes\n      });\n    Tone.Transport.bpm.value = this.state.bpm;\n    Tone.Transport.schedule(this.startLoop, \"0:0:1\");\n    Tone.Transport.loop = true;\n    Tone.Transport.loopEnd = '1m';\n    Tone.Transport.setLoopPoints(\"0:0:1\", \"0:0:17\");\n    Tone.Transport.scheduleRepeat((time)=>{\n      this.setState({\n        transportTime:Tone.Time(time).toBarsBeatsSixteenths()\n      });\n    },\"16n\");\n    //Schedule the default pattern\n  }\n  startLoop = (time: number) => {\n    // if(chaseLoop){\n    //   chaseLoop.destroy();\n    // }\n    \n    // let chaseLoop = new Tone.Loop(function(time){\n    //   //instead of scheduling visuals inside of here\n    //   //schedule a deferred callback with Tone.Draw\n    \n    //   Tone.Draw.schedule(function(){\n    //     //this callback is invoked from a requestAnimationFrame\n    //     //and will be invoked close to AudioContext time\n    //     console.log('fart ', Tone.Time(time).toBarsBeatsSixteenths());\n    //   }, time) //use AudioContext time of the event\n    \n    // }, \"16n\").start(0);\n\n    Object.keys(this.sequence).map((track)=>{\n      let reducedSteps = this.sequence[track].notes.reduce(function(a, srch, i){ if(srch === 1)a.push(i+1); return a;},[]);\n      reducedSteps.map((steps)=>{\n          Tone.Transport.scheduleOnce((time)=>{\n            this.sequence[track].fireIt.start(time);\n          },\"0:0:\"+steps);//Ableton Timing style. eg Measures:Bars:16ths.\n          Tone.Draw.schedule((time)=>{\n            console.log(track);\n          },\"0:0:1\")\n      });\n    });\n\n    Tone.Transport.scheduleOnce((time)=>{\n      Tone.Draw.schedule((time)=>{\n        console.log(\"meow \",Tone.Time(time).toBarsBeatsSixteenths());\n      }); \n    }, \"0:0:1\");\n    Tone.Transport.scheduleOnce((time)=>{\n      Tone.Draw.schedule((time)=>{\n        console.log(\"woof \",Tone.Time(time).toBarsBeatsSixteenths());\n      }); \n    }, \"0:0:5\");\n    // console.log(i);\n    \n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <TransportControls\n          changeTempo={this.changeTempo}\n          playstate={this.state.playstate}\n          bpm={this.state.bpm}\n          transportTime = {this.state.transportTime}\n          stopSequencer = {this.stopSequencer}\n          startSequencer = {this.startSequencer}\n          clearSequencer = {this.clearSequencer}\n        />\n        <TrackSelection\n          currenttrack={this.state.currenttrack}\n          sequence={this.sequence}\n          switchTrack={this.switchTrack}\n        />\n        {/* <MixerControls\n          tracks={this.state.tracks}\n          sequence={this.sequence}\n          /> */}\n        <SequencerControls \n          pads={this.state.pads}\n          currenttrack={this.state.currenttrack}\n          currentnotes={this.state.currentnotes}\n          sequence={this.sequence}\n          updateNote={this.updateNote}\n          />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}